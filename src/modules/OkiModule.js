import fetch from 'node-fetch';
import { removeTriggerFromText } from '../utils/triggerUtils.js';

/**
 * OkiModule - –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST –∑–∞–ø—Ä–æ—Å –Ω–∞ webhook —Å —Ç–µ–∫—Å—Ç–æ–º
 */
export class OkiModule {
    constructor() {
        this.webhookUrl = 'https://webhook.nodul.ru/13218/dev/req';
    }

    init() {
        console.log(`‚úÖ [Oki] –ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);
        return [];
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ webhook
     */
    async sendWebhook(originalText, session) {
        const startTime = Date.now();
        const cleanedText = removeTriggerFromText(originalText, 'okiTrigger');

        try {
            session.layouts.showTextWall("–£—Å–ª—ã—à–∞–ª. –î—É–º–∞—é...", { durationMs: 15000 });

            const response = await fetch(this.webhookUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ text: cleanedText || originalText })
            });

            const result = await response.text();
            const duration = Date.now() - startTime;

            console.log(`‚úÖ [Oki] –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (${response.status}, ${duration}–º—Å)`);
            console.log(`üì§ [Oki] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: "${cleanedText}"`);
            console.log(`üì• [Oki] –ü–æ–ª—É—á–µ–Ω–æ: "${result}"`);

            session.layouts.showTextWall(result, { durationMs: 10000 });
        } catch (error) {
            const duration = Date.now() - startTime;

            console.error(`‚ùå [Oki] –û—à–∏–±–∫–∞ (${duration}–º—Å):`, error.message);

            session.layouts.showReferenceCard(
                "–û—à–∏–±–∫–∞ Oki",
                `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ${error.message}`,
                { durationMs: 3000 }
            );
        }
    }

    cleanup() {
        // –ù–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    }
}
