import { StreamType } from '@mentra/sdk';
import { readFileSync } from 'fs';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';
import { checkCommandTriggers } from '../../utils/commands.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

/**
 * TranscriptionModule - –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ –º–∞–ø–ø–∏–Ω–≥
 */
export class TranscriptionModule {
    constructor(weatherModule, menuModule, newsModule, birthdaysModule, holidaysModule, tvShowsModule, feedModule, okiModule) {
        this.weatherModule = weatherModule;
        this.menuModule = menuModule;
        this.newsModule = newsModule;
        this.birthdaysModule = birthdaysModule;
        this.holidaysModule = holidaysModule;
        this.tvShowsModule = tvShowsModule;
        this.feedModule = feedModule;
        this.okiModule = okiModule;

        this.commands = JSON.parse(readFileSync(join(__dirname, '../../config/commands.json'), 'utf-8'));

        this.setupCommandHandlers();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–ø–ø–∏–Ω–≥–∞ –∫–æ–º–∞–Ω–¥ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
     */
    setupCommandHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ "–æ–∫–∏" –∫–æ–º–∞–Ω–¥
        this.okiHandlers = [
            { trigger: 'showWeather', handler: (s, sid) => this.weatherModule.showWeatherForSession(s, sid) },
            { trigger: 'showNews', handler: (s) => this.newsModule.showLatestNews(s, this.currentSessionId) },
            { trigger: 'showSolovyev', handler: (s) => this.tvShowsModule.showTvShowByTrigger(s, 'showSolovyev') },
            { trigger: 'showPustGovoryat', handler: (s) => this.tvShowsModule.showTvShowByTrigger(s, 'showPustGovoryat') },
            { trigger: 'showFeed', handler: (s) => this.feedModule.showFeed(s) }
        ];

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
        this.menuHandlers = [
            { trigger: 'showWeather', handler: (s, sid) => this.weatherModule.showWeatherForSession(s, sid) },
            { trigger: 'showBirthdays', handler: (s, sid) => this.birthdaysModule.showLatestBirthday(s, sid) },
            { trigger: 'showHolidays', handler: (s, sid) => this.holidaysModule.showLatestHoliday(s, sid) },
            { trigger: 'showNews', handler: (s, sid) => this.newsModule.showLatestNews(s, sid) }
        ];

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π
        this.navigationModules = [
            { module: this.newsModule, handler: (s, sid) => this.newsModule.showNextNews(s, sid) },
            { module: this.birthdaysModule, handler: (s, sid) => this.birthdaysModule.showNextBirthday(s, sid) },
            { module: this.holidaysModule, handler: (s, sid) => this.holidaysModule.showNextHoliday(s, sid) }
        ];
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –¥–ª—è —Å–µ—Å—Å–∏–∏
     */
    init(session, sessionId) {
        this.currentSessionId = sessionId;
        
        const transcriptionHandler = async (data) => {
            console.log(`üé§ [Transcription] "${data.text}" (${data.isFinal})`);

            if (data.isFinal) {
                await this.handleCommand(data, session, sessionId);
            }
        };

        session.subscribe?.(StreamType.TRANSCRIPTION);
        const unsubscribe = session.events.onTranscription(transcriptionHandler);
        console.log(`‚úÖ [Transcription] –ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—è–∑—ã–∫: ru-RU)`);

        return [unsubscribe];
    }

    /**
     * –°–±—Ä–æ—Å —Ä–µ–∂–∏–º–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
     */
    resetViewModes(sessionId) {
        this.newsModule.viewState.setViewMode(sessionId, false);
        this.birthdaysModule.viewState.setViewMode(sessionId, false);
        this.holidaysModule.viewState.setViewMode(sessionId, false);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
     */
    async handleCommand(data, session, sessionId) {
        const text = data.text.toLowerCase().trim();

        console.log(`üîç [Transcription] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: "${text}"`);

        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ "–æ–∫–∏" —Ç—Ä–∏–≥–≥–µ—Ä–∞
        if (checkCommandTriggers(text, this.commands, 'okiTrigger')) {
            console.log(`üîî [Transcription] –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä "–æ–∫–∏"`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ "–æ–∫–∏" –∫–æ–º–∞–Ω–¥—ã
            for (const { trigger, handler } of this.okiHandlers) {
                if (checkCommandTriggers(text, this.commands, trigger)) {
                    console.log(`‚úÖ [Transcription] –û–±—Ä–∞–±–æ—Ç–∫–∞ "${trigger}" —á–µ—Ä–µ–∑ "–æ–∫–∏"`);
                    await handler(session, sessionId);
                    return;
                }
            }

            // –ï—Å–ª–∏ –Ω–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook
            console.log(`üì§ [Transcription] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook`);
            await this.okiModule.sendWebhook(data.text, session);
            return;
        }

        // 2. –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
        if (checkCommandTriggers(text, this.commands, 'openMenu')) {
            console.log(`üëã [Transcription] –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é`);
            await this.menuModule.openMenu(session, sessionId);
            return;
        }

        // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
        if (this.menuModule.isMenuOpen(sessionId)) {
            for (const { trigger, handler } of this.menuHandlers) {
                if (checkCommandTriggers(text, this.commands, trigger)) {
                    console.log(`‚úÖ [Transcription] –í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –º–µ–Ω—é: "${trigger}"`);
                    this.menuModule.closeMenu(sessionId);
                    this.resetViewModes(sessionId);
                    await handler(session, sessionId);
                    return;
                }
            }
        }

        // 4. –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª–µ–π
        if (checkCommandTriggers(text, this.commands, 'nextNews')) {
            for (const { module, handler } of this.navigationModules) {
                if (module.isInViewMode(sessionId)) {
                    console.log(`‚û°Ô∏è [Transcription] –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞`);
                    await handler(session, sessionId);
                    return;
                }
            }
        }

        console.log(`‚ùå [Transcription] –ö–æ–º–∞–Ω–¥–∞ "${text}" –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞`);
    }
}
