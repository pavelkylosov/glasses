import { StreamType } from '@mentra/sdk';
import { createDelayedAction } from '../../utils/delayedAction.js';

/**
 * HeadTrackingModule - –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π –≥–æ–ª–æ–≤—ã
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞—à–±–æ—Ä–¥ –ø—Ä–∏ –ø–æ–¥–Ω—è—Ç–∏–∏ –≥–æ–ª–æ–≤—ã
 */
export class HeadTrackingModule {
    constructor(dashboardModule) {
        this.dashboardModule = dashboardModule;
        this.lastPosition = new Map();
        this.dashboardActions = new Map(); // –ó–∞–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –¥–ª—è —Å–µ—Å—Å–∏–∏
     * @param {AppSession} session - –°–µ—Å—Å–∏—è
     * @param {string} sessionId - ID —Å–µ—Å—Å–∏–∏
     */
    init(session, sessionId) {
        // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
        const delayedDashboard = createDelayedAction();
        this.dashboardActions.set(sessionId, delayedDashboard);

        const headPositionHandler = (data) => {
            console.log(`üë§ [HeadTracking] ${data.position}`);

            const lastPos = this.lastPosition.get(sessionId);

            if (data.position === 'up') {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 100–º—Å
                delayedDashboard.delay(() => {
                    console.log(`üìä [HeadTracking] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥`);
                    this.dashboardModule.showDashboard(session, sessionId);
                }, 100);
            } else if (lastPos === 'up' && data.position !== 'up') {
                // –ì–æ–ª–æ–≤–∞ –æ–ø—É—â–µ–Ω–∞ - —Å–∫—Ä—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥
                console.log(`üîΩ [HeadTracking] –°–∫—Ä—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥`);

                // –ï—Å–ª–∏ –¥–∞—à–±–æ—Ä–¥ –µ—â–µ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω - –æ—Ç–º–µ–Ω—è–µ–º –ø–æ–∫–∞–∑
                if (!delayedDashboard.cancel()) {
                    // –î–∞—à–±–æ—Ä–¥ —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω - —Å–∫—Ä—ã–≤–∞–µ–º
                    this.dashboardModule.hideDashboard(session);
                }
            }

            this.lastPosition.set(sessionId, data.position);
        };

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≥–æ–ª–æ–≤—ã
        session.subscribe?.(StreamType.HEAD_POSITION);
        const unsubscribe = session.events.onHeadPosition(headPositionHandler);
        console.log(`‚úÖ [HeadTracking] –ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);

        return [unsubscribe];
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–µ—Å—Å–∏–∏
     */
    cleanup(sessionId) {
        const delayedDashboard = this.dashboardActions.get(sessionId);
        if (delayedDashboard) {
            delayedDashboard.cancel();
            this.dashboardActions.delete(sessionId);
        }
        this.lastPosition.delete(sessionId);
    }
}

